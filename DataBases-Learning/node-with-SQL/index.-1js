const { faker } = require('@faker-js/faker');
const mysql = require('mysql2');
const express = require("express");
const app = express();
const path = require("path")
const methodOverride = require("method-override");
const bcrypt = require('bcrypt');

app.use(methodOverride("_method"));
app.use(express.urlencoded({extended: true}));
app.set("view engine" , "ejs");
app.set("views", path.join(__dirname, "/views"));

let port = 8080;

const connection = mysql.createConnection({
    host: 'localhost',
    user: 'root',
    database: 'node-with-SQL',
    password:'dinesh16',
});

let getRandomUser = () => {
    return [    
      faker.string.uuid(),
      faker.internet.userName(),
      faker.internet.email(),
      faker.internet.password(),
      ];
  };


//home
app.get("/", (req,res) => {
    let q = "SELECT count(*) FROM user";
    try {
    connection.query(q , (err, result) => {
        if(err) throw err;
        let count = result[0]["count(*)"]
        res.render("home.ejs" , {count});
    });
    } catch (err) {
        console.log(err);
        res.send("some error in DATABASE");
    }
})

// show route 
app.get("/user" , (req, res) => {
    let q = `SELECT * FROM user`;
    try {
        connection.query(q , (err, users) => {
            if(err) throw err;
           //console.log(users);
            res.render("show.ejs" , {users})
        });
        } catch (err) {
            console.log(err);
            res.send("some error in DATABASE");
        }
})


//edit route
app.get("/user/:id/edit" , (req , res) => {
    let {id} = req.params;
    let q = `SELECT * FROM user WHERE id='${id}' `
   
    try {
        connection.query(q , (err, result) => {
            if(err) throw err;
            let user = result[0];
           res.render("edit" , {user});
        });
        } catch (err) {
            console.log(err);
            res.send("some error in DATABASE");
        }
});

//UPDATE route
// app.patch("/user/:id", (req, res) => {
//     let {id} = req.params;
//     let {password: formPass, username: newUsername} = req.body;
//     let q = `SELECT * FROM user WHERE id='${id}' `
//     try {
//         connection.query(q , (err, result) => {
//             if(err) throw err;
//             let user = result[0];
//             if(formPass != user.password) {
//                 res.send("WRONG Password")
//             }
//             res.send(user);
//         });
//         } catch (err) {
//             console.log(err);
//             res.send("some error in DATABASE");
//         }
// })

app.patch("/user/:id", (req, res) => {
    let { id } = req.params;
    let { password: formPass, username: newUsername } = req.body;
    
    let selectQuery = `SELECT * FROM user WHERE id = ?`;
    let updateQuery = `UPDATE user SET username = ? WHERE id = ?`;
    
    connection.query(selectQuery, [id], (err, result) => {
        if (err) {
            console.error(err);
            return res.send("Some error occurred in the DATABASE");
        }
        
        if (result.length === 0) {
            return res.send("User not found");
        }

        let user = result[0];

        bcrypt.compare(formPass, user.password, (err, isMatch) => {
            if (err) {
                console.error(err);
                return res.send("Error during password comparison");
            }

            if (!isMatch) {
                return res.send("WRONG Password");
            }

            connection.query(updateQuery, [newUsername, id], (err, updateResult) => {
                if (err) {
                    console.error(err);
                    return res.send("Some error occurred while updating the username");
                }
                res.send("Username updated successfully");
            });
        });
    });
});

app.listen(port , () => {
    console.log(`Lisening to the port ${port}`)
})